/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package VentanasEmergentes;

import inventario.DepartamentoBD;
import inventario.ObtenerParametros;
import inventario.Productos;
import inventario.ProductosBD;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import ventanas.AlmacenJframe;
import ventanas.ajustesInventarioPanel;
import ventanas.ventasPanel;

/**
 *
 * @author angel
 */
public class BuscadorProductos extends javax.swing.JFrame {

    /**
     * Creates new form BuscadorProductos
     */
    
    Connection conexion;
    ventasPanel ventanaV;
    ajustesInventarioPanel ventanaA;
    boolean ventas;
    String codigo;
    DefaultTableModel modeloProductos;
    DepartamentoBD departamentosBD;
    
    public BuscadorProductos(Connection con, ObtenerParametros parametros, ventasPanel ventanaVentas) {
        ventas = true;
        conexion = con;
        ventanaV = ventanaVentas;
        departamentosBD = new DepartamentoBD(con);
        initComponents();
        modeloProductos = (DefaultTableModel) TablaProductos.getModel();
        cargarDepartamentos(comboBuscarDepartamentos);
        cargarProductos();      
    }
    
    public BuscadorProductos(Connection con, ObtenerParametros parametros, ajustesInventarioPanel ventanaAjustesInventario) {
        ventas = false;
        conexion = con;
        ventanaA = ventanaAjustesInventario;
        departamentosBD = new DepartamentoBD(con);
        initComponents();
        modeloProductos = (DefaultTableModel) TablaProductos.getModel();
        cargarDepartamentos(comboBuscarDepartamentos);
        cargarProductos();    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        tablaProductosBuscador = new javax.swing.JScrollPane();
        TablaProductos = new javax.swing.JTable();
        comboBuscarDepartamentos = new javax.swing.JComboBox<>();
        CodigoTexto = new javax.swing.JTextField();
        BuscarBoton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel6.setFocusable(false);

        tablaProductosBuscador.setViewportBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tablaProductosBuscador.setFocusCycleRoot(true);
        tablaProductosBuscador.setFont(new java.awt.Font("Yu Gothic UI", 0, 48)); // NOI18N

        TablaProductos.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        TablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "Nombre", "Cantidad", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaProductos.setRowHeight(40);
        TablaProductos.setShowHorizontalLines(true);
        TablaProductos.setShowVerticalLines(true);
        TablaProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaProductosMouseClicked(evt);
            }
        });
        tablaProductosBuscador.setViewportView(TablaProductos);

        comboBuscarDepartamentos.setFont(new java.awt.Font("Yu Gothic UI", 0, 24)); // NOI18N
        comboBuscarDepartamentos.setName("departamentos2"); // NOI18N
        comboBuscarDepartamentos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBuscarDepartamentosItemStateChanged(evt);
            }
        });
        comboBuscarDepartamentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBuscarDepartamentosActionPerformed(evt);
            }
        });

        CodigoTexto.setFont(new java.awt.Font("Yu Gothic UI", 0, 24)); // NOI18N
        CodigoTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CodigoTextoActionPerformed(evt);
            }
        });
        CodigoTexto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CodigoTextoKeyPressed(evt);
            }
        });

        BuscarBoton.setText("Buscar");
        BuscarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tablaProductosBuscador)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(comboBuscarDepartamentos, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CodigoTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BuscarBoton)
                        .addGap(0, 586, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(CodigoTexto, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(comboBuscarDepartamentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BuscarBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tablaProductosBuscador, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1214, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 820, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TablaProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaProductosMouseClicked
        if (ventas){
            if (evt.getClickCount() == 2){
                JTable tabla = (JTable)evt.getComponent();
                codigo = String.valueOf(tabla.getValueAt(tabla.getSelectedRow(), 0));
                try {
                    ventanaV.cargarProducto(codigo);
                } catch (SQLException ex) {
                    Logger.getLogger(BuscadorProductos.class.getName()).log(Level.SEVERE, null, ex);
                }
                dispose();
            }
        }
        else{
            if (evt.getClickCount() == 2){
                JTable tabla = (JTable)evt.getComponent();
                codigo = String.valueOf(tabla.getValueAt(tabla.getSelectedRow(), 0));
                ventanaA.cargarProducto(codigo);
                dispose();
            }
        }
    }//GEN-LAST:event_TablaProductosMouseClicked

    private void comboBuscarDepartamentosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBuscarDepartamentosItemStateChanged
        DepartamentoBD departamento= new DepartamentoBD(conexion);
        int codigoDepartamento;
        try {
            codigoDepartamento = departamento.codigoDepartamento(comboBuscarDepartamentos.getSelectedItem().toString());
            System.out.println(codigoDepartamento);
            cargarProductosDepartamentos(codigoDepartamento);
            
            dispose();
        } catch (SQLException ex) {
            Logger.getLogger(AlmacenJframe.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_comboBuscarDepartamentosItemStateChanged

    private void comboBuscarDepartamentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBuscarDepartamentosActionPerformed

        DepartamentoBD departamento= new DepartamentoBD(conexion);
        int codigoDepartamento;
        String nombre = (String)comboBuscarDepartamentos.getSelectedItem();
        if (nombre.equals("Sin filtro")){
            cargarProductos();
        }
        else{
            try {
                codigoDepartamento = departamento.codigoDepartamento(nombre);
                cargarProductosDepartamentos(codigoDepartamento);
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_comboBuscarDepartamentosActionPerformed

    private void CodigoTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CodigoTextoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CodigoTextoActionPerformed

    private void CodigoTextoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CodigoTextoKeyPressed
        ProductosBD productoBD = new ProductosBD(conexion);
        Productos producto = productoBD.buscadorProductos(CodigoTexto.getText());
        int key = evt.getKeyCode();
        boolean enter = key == 10;
        if ((enter)){
            if(!(producto.getNombre() == null)){
                limpiarTablas();
                System.out.println(producto.getNombre());
                float precio;
                float precioCosto = producto.getPrecioCosto();
                float ganancia = producto.getGanancia();
                float iva = producto.getIva();

                precio = precioCosto + precioCosto*ganancia/100 + (precioCosto+precioCosto*ganancia/100)*iva/100;
                modeloProductos.addRow(new Object[]{producto.getCodigo(), producto.getNombre(),
                    producto.getCantidad(), redondear(precio)});
        }
        else{
            JOptionPane.showMessageDialog(null, "Producto no encontrado");
        }
        }
    }//GEN-LAST:event_CodigoTextoKeyPressed

    private void BuscarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarBotonActionPerformed

    }//GEN-LAST:event_BuscarBotonActionPerformed

    /**
     * @param con
     * @param parametros
     * @param ventanaVentas
     * 
     */
    public static void abrirBuscador(Connection con, ObtenerParametros parametros, ventasPanel ventanaVentas) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuscadorProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuscadorProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuscadorProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuscadorProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuscadorProductos(con, parametros, ventanaVentas).setVisible(true);
            }
        });
    }
    
    public static void abrirBuscador(Connection con, ObtenerParametros parametros, ajustesInventarioPanel inventarioPanel) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuscadorProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuscadorProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuscadorProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuscadorProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuscadorProductos(con, parametros, inventarioPanel).setVisible(true);
            }
        });
    }
    
    //Carga los productos en la tabla
    private void cargarProductos(){
        ProductosBD productos;
        ResultSet set;
        productos = new ProductosBD(conexion);
        set = productos.obtenerProductos();
        float precio;
        limpiarTablas();
        
        try{
            while(set.next()){
                float precioCosto = set.getFloat(5);
                float ganancia = set.getFloat(6);
                float iva = set.getFloat(8);

                //precio = precioCosto + precioCosto*ganancia/100 + (precioCosto+precioCosto*ganancia/100)*(iva/100);
                precio = (precioCosto*(1+ganancia/100))*(1+iva/100);
                modeloProductos.addRow(new Object[]{set.getString(1), set.getString(2),
                set.getInt(3), redondear(precio)});
            }
        }
        catch(SQLException e){
            System.out.println("El error est"+e.getMessage());
        }
    }
        
    private void limpiarTablas(){
        int cantidad =modeloProductos.getRowCount()-1;  
        for(int i=cantidad;i>=0;i--){ 
            modeloProductos.removeRow(i);
        }
    }   
    
        private String redondear(float numero){
        int decimales = 2;
        String resultado;
        BigDecimal bd = new BigDecimal(numero);
        bd = bd.setScale(decimales, RoundingMode.HALF_UP);
        resultado = bd.toString();
        return resultado;
    }
        
    private void cargarDepartamentos(JComboBox combo){
        ResultSet set = departamentosBD.cargarDepartamentos();
        combo.addItem("Sin filtro");
        System.out.println(combo.getName());
        try{
            while(set.next()){
                System.out.println(set.getString(2));
                combo.addItem(set.getString(2));
            }
        }
        catch(SQLException e){
            System.out.println("Error en cargarDepartamentos "+e.getMessage());
        }
        
    }
    
        private void cargarProductosDepartamentos(int parametro){
        ProductosBD productos;
        ResultSet set;
        productos = new ProductosBD(conexion);
        set = productos.getProductosDepartamentos(parametro);
        float precio;
        limpiarTablas();
        
        try{
            while(set.next()){
                precio = set.getFloat(5)+(set.getFloat(5)*set.getFloat(6))/100+
                        (set.getFloat(5)*set.getFloat(8))/100;
                modeloProductos.addRow(new Object[]{set.getLong(1), set.getString(2),
                set.getInt(3), precio});
            }
        }
        catch(SQLException e){
            System.err.println("Error en BuscadorProductos cargarProductosDepartamentos "+e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BuscarBoton;
    private javax.swing.JTextField CodigoTexto;
    private javax.swing.JTable TablaProductos;
    private javax.swing.JComboBox<String> comboBuscarDepartamentos;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane tablaProductosBuscador;
    // End of variables declaration//GEN-END:variables
}
